name: Deploy
on:
  push:
    branches: [master]
jobs:
  push_to_registry:
    name: Build & push Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
        
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/scherebart/my-movies-collection

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: "VITE_HOME_URL=http://vps-7e753c8e.vps.ovh.net/"
  
  deploy:
    name: Deploy to VPS
    runs-on: ubuntu-latest
    needs: [push_to_registry]

    steps:
    - uses: actions/checkout@v3

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ghcr.io/scherebart/my-movies-collection
        
    - name: deploy
      uses: appleboy/ssh-action@master
      env:
        SERVER_PRIVATE_KEY: ${{ secrets.SERVER_PRIVATE_KEY }}
        API_KEY_OMDB: ${{ secrets.API_KEY_OMDB }}
      with:
        host: ${{ secrets.HOST }}
        USERNAME: ${{ secrets.USERNAME }}
        PORT: ${{ secrets.PORT }}
        KEY: ${{ secrets.SSHKEY }}
        envs: SERVER_PRIVATE_KEY,API_KEY_OMDB
        script: |
          TAG=${{ steps.meta.outputs.tags }}
          docker pull $TAG
          docker stop my-movies-collection
          docker rm my-movies-collection
          docker run -d -p 8080:8080 -v my-movies-collection-db:/home/node/.db \
              -e "SERVER_PRIVATE_KEY=$SERVER_PRIVATE_KEY" -e "API_KEY_OMDB=$API_KEY_OMDB" \
              --name my-movies-collection $TAG
